name: CI

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        run: |
          pip install flake8
          flake8 .
#          pip install flake8
#          flake8 .
#          pip install black
#          black .
#          pip install isort
#          isort .
#        uses: pre-commit install

#      - name: flake8 Lint
#        uses: py-actions/flake8@v1
#
#      - name: Blacken the code
#        uses: piotrpawlaczek/python-blacken@release/stable

#      - name: Isort all dependencies
#        uses: pre-commit/action@v2.0.0

#  migration:
#    runs-on: ubuntu-latest
#    steps:
#        - name: Build the Stack
#          run:  docker build -t warehouse_cli --rm .
#
#        # - name: Run DB Migrations
#        #  run:  docker-compose -f local.yml run --rm django python manage.py migrate
#
#        - name: Run Django Tests
#          run:  ddocker run -it --name warehouse_app --rm warehouse_cli coverage run -m pytest -vv
#
#        - name: Tear down the Stack
#          run:  docker image rm warehouse_cli

  # With no caching at all the entire ci process takes 4m 30s to complete!
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1

        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: enidoshatro/lab:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
